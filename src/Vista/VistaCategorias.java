/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Vista;

import Controlador.CategoriaControlador;
import Modelo.Categoria;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import com.itextpdf.kernel.pdf.PdfDocument;
import com.itextpdf.kernel.pdf.PdfWriter;
import com.itextpdf.layout.Document;
import com.itextpdf.layout.element.Paragraph;
import com.itextpdf.layout.element.Table;
import com.itextpdf.layout.property.TextAlignment;
import com.itextpdf.layout.property.UnitValue;
import java.awt.FileDialog;
import javax.swing.JOptionPane;

/**
 *
 * @author COMPHP
 */
public class VistaCategorias extends javax.swing.JPanel {
    
    private final CategoriaControlador categoriaControlador;
    private Integer idCategoriaSeleccionada = null;
    
    public VistaCategorias() {
        initComponents();
        this.categoriaControlador = new CategoriaControlador();
        cargarDatosTabla();
    }
    
    public void cargarDatosTabla() {
        //Obtener todas las categorias del controlador
        List<Categoria> categorias = categoriaControlador.obtenerTodasCategorias();
        if (categorias != null) {
            // obtener el modelo existente de la tabla
            DefaultTableModel model = (DefaultTableModel) tablaCategorias.getModel();
            model.setRowCount(0);
            //llenar las filas con los datos de categorias  
            for (Categoria cat : categorias) {
                Object[] row = {
                    cat.getIdCategoria(),
                    cat.getNombreCategoria(),
                    cat.getDescripcionCategoria()
                };
                model.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        textNombreCategoria = new javax.swing.JTextField();
        DescripcionCategoria = new javax.swing.JLabel();
        textDescripcionCategoria = new javax.swing.JTextField();
        Buscar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        textBuscar = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaCategorias = new javax.swing.JTable();
        btnGuardar1 = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(102, 102, 255)));

        jLabel1.setText("NombreCatategoria");

        textNombreCategoria.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(102, 102, 255)));
        textNombreCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textNombreCategoriaActionPerformed(evt);
            }
        });

        DescripcionCategoria.setText("DescripcionCategoria");

        textDescripcionCategoria.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(102, 102, 255)));
        textDescripcionCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textDescripcionCategoriaActionPerformed(evt);
            }
        });

        Buscar.setText("Buscar");

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accionBotonbtnGuardar(evt);
            }
        });

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accionBotonActualizar(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accionBotonbtnEliminar(evt);
            }
        });

        textBuscar.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(102, 102, 255)));
        textBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textBuscarActionPerformed(evt);
            }
        });
        textBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textBuscarKeyTyped(evt);
            }
        });

        tablaCategorias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID Categoria", "Nombre", "Descripcion"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaCategorias.setPreferredSize(new java.awt.Dimension(300, 230));
        tablaCategorias.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaCategoriaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaCategorias);

        btnGuardar1.setText("Generar Reportes");
        btnGuardar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accionBotonGenerarReporte(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(textNombreCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(33, 33, 33)
                                .addComponent(DescripcionCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(211, 211, 211)
                                .addComponent(textDescripcionCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(textBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(131, 131, 131)
                                        .addComponent(Buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnGuardar1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 19, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(DescripcionCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textDescripcionCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textNombreCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGuardar1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void textNombreCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textNombreCategoriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textNombreCategoriaActionPerformed

    private void textDescripcionCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textDescripcionCategoriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textDescripcionCategoriaActionPerformed

    private void textBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textBuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textBuscarActionPerformed

    private void accionBotonbtnGuardar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accionBotonbtnGuardar
        String nombre = textNombreCategoria.getText();
        String descripcion = textDescripcionCategoria.getText();
        
        if (!nombre.isEmpty() && !descripcion.isEmpty()) {
            categoriaControlador.crearCategoria(nombre, descripcion);
            cargarDatosTabla();
            textNombreCategoria.setText("");
            textDescripcionCategoria.setText("");
        } else {            
            javax.swing.JOptionPane.showMessageDialog(this, "por favor, llene todos los campos.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_accionBotonbtnGuardar

    private void accionBotonbtnEliminar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accionBotonbtnEliminar
        int filaSelecionada = tablaCategorias.getSelectedRow();
        if (filaSelecionada != -1) {
            int idCategoria = (int) tablaCategorias.getValueAt(filaSelecionada, 0);
            categoriaControlador.eliminarCategoria(idCategoria);
            cargarDatosTabla();
                    } else {

            javax.swing.JOptionPane.showMessageDialog(this, "Selecciona una fila para eliminar.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_accionBotonbtnEliminar

    private void tablaCategoriaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaCategoriaMouseClicked
        if (evt.getClickCount() == 2) {
            
            int filaSelecionada = tablaCategorias.getSelectedRow();
            
            if (filaSelecionada != -1) {
                idCategoriaSeleccionada = (int) tablaCategorias.getValueAt(filaSelecionada, 0);
                String nombre = (String) tablaCategorias.getValueAt(filaSelecionada, 1);
                String descripcion = (String) tablaCategorias.getValueAt(filaSelecionada, 2);
                
                textNombreCategoria.setText(nombre);
                textDescripcionCategoria.setText(descripcion);
                
                btnEliminar.setEnabled(false);
                btnGuardar.setEnabled(false);
            }
        }
    }//GEN-LAST:event_tablaCategoriaMouseClicked

    private void accionBotonActualizar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accionBotonActualizar
        String nombre = textNombreCategoria.getText();
        String descripcion = textDescripcionCategoria.getText();
        if (idCategoriaSeleccionada != null && !nombre.isEmpty() && !descripcion.isEmpty()) {
            categoriaControlador.actualizarCategoria(idCategoriaSeleccionada, nombre, descripcion);
            cargarDatosTabla();
            
            textNombreCategoria.setText("");
            textDescripcionCategoria.setText("");
            idCategoriaSeleccionada = null;
            
            btnEliminar.setEnabled(true);
            btnGuardar.setEnabled(true);
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "por favor, llene todos los campos.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            
        }
    }//GEN-LAST:event_accionBotonActualizar

    private void textBuscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textBuscarKeyTyped
        String textoBusqueda = textBuscar.getText().trim().toLowerCase();
        List<Categoria> categorias = categoriaControlador.obtenerTodasCategorias();
        
        DefaultTableModel modelo = (DefaultTableModel) tablaCategorias.getModel();
        modelo.setRowCount(0);
        
        if (categorias != null) {
            for (Categoria cat : categorias) {
                if (textoBusqueda.isEmpty()|| 
                   cat.getNombreCategoria().toLowerCase().contains(textoBusqueda)||
                   cat.getDescripcionCategoria().toLowerCase().contains(textoBusqueda)){  
                         Object[] fila = {
                        cat.getIdCategoria(),
                        cat.getNombreCategoria(),
                        cat.getDescripcionCategoria()
                    };
                    modelo.addRow(fila);
                }
            }
        }        
        
    }//GEN-LAST:event_textBuscarKeyTyped

    private void accionBotonGenerarReporte(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accionBotonGenerarReporte
        // TODO add your handling code here:
        try {
            FileDialog dialogoArchivo = new FileDialog((java.awt.Frame) null, "Guardar Reporte PDF", FileDialog.SAVE);
            dialogoArchivo.setFile("ReporteCategorias.pdf");
            dialogoArchivo.setVisible(true);

            String ruta = dialogoArchivo.getDirectory();
            String nombreArchivo = dialogoArchivo.getFile();

            if (ruta == null || nombreArchivo == null) {
                JOptionPane.showMessageDialog(this, "Operación cancelada.", "Información", JOptionPane.INFORMATION_MESSAGE);
                return;
            }

            String rutaCompleta = ruta + nombreArchivo;

            PdfWriter escritor = new PdfWriter(rutaCompleta);
            PdfDocument pdf = new PdfDocument(escritor);
            Document documento = new Document(pdf);

            documento.add(new Paragraph("Reporte de Categorias")
                    .setTextAlignment(TextAlignment.CENTER)
                    .setFontSize(20)
                    .setBold());

            documento.add(new Paragraph("Fecha: " + new java.util.Date().toString())
                    .setTextAlignment(TextAlignment.CENTER)
                    .setFontSize(12));

            Table tabla = new Table(3);
            tabla.setWidth(UnitValue.createPercentValue(100));
            tabla.addHeaderCell("ID Categoria").setBold();
            tabla.addHeaderCell("Nombre").setBold();
            tabla.addHeaderCell("Descripción").setBold();

            List<Categoria> listaCategorias = categoriaControlador.obtenerTodasCategorias();
            if (listaCategorias != null) {
                for (Categoria categoria : listaCategorias) {
                    tabla.addCell(String.valueOf(categoria.getIdCategoria()));
                    tabla.addCell(categoria.getNombreCategoria());
                    tabla.addCell(categoria.getDescripcionCategoria());
                }
            }
            documento.add(tabla);
            documento.add(new Paragraph("Notas: Reporte generado automaticamente desde el sistema.")
                    .setFontSize(10)
                    .setMarginTop(20));

            documento.close();
            JOptionPane.showMessageDialog(this, "Reporte PDF generado con éxito en: " + rutaCompleta, "Éxito", JOptionPane.INFORMATION_MESSAGE);

//Lógica para generar el reporte PDF
    } catch (Exception e) { 
      e.printStackTrace();
      JOptionPane.showMessageDialog(
      this, "Error al generar el PDF: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
}

    }//GEN-LAST:event_accionBotonGenerarReporte


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Buscar;
    private javax.swing.JLabel DescripcionCategoria;
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnGuardar1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaCategorias;
    private javax.swing.JTextField textBuscar;
    private javax.swing.JTextField textDescripcionCategoria;
    private javax.swing.JTextField textNombreCategoria;
    // End of variables declaration//GEN-END:variables
}
